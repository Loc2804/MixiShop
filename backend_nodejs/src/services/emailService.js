require('dotenv').config();
const imaps = require('imap-simple');
const { simpleParser } = require('mailparser'); // D√πng ƒë·ªÉ ph√¢n t√≠ch n·ªôi dung email
const nodemailer = require("nodemailer");

const config = {
    imap: {
        user: process.env.EMAIL_APP, // T√†i kho·∫£n email c·ªßa b·∫°n
        password: process.env.EMAIL_APP_PASSWORD, // M·∫≠t kh·∫©u ·ª©ng d·ª•ng
        host: 'imap.gmail.com',
        port: 993,
        tls: true,
        authTimeout: 3000
    }
};

let sendEmail = async (data) => {
    try {
        const transporter = nodemailer.createTransport({
            service: 'gmail', // B·∫°n c√≥ th·ªÉ d√πng c√°c d·ªãch v·ª• kh√°c
            auth: {
                user: process.env.EMAIL_APP, // ƒê·ªãa ch·ªâ email c·ªßa b·∫°n
                pass: process.env.EMAIL_APP_PASSWORD // M·∫≠t kh·∫©u ·ª©ng d·ª•ng
            }
        });

        // T·∫°o n·ªôi dung email
        const mailOptions = {
            from: `${data.email}`, // ƒê·ªãa ch·ªâ ng∆∞·ªùi g·ª≠i
            to: `${process.env.EMAIL_APP}`, // ƒê·ªãa ch·ªâ nh·∫≠n
            subject: 'Ph·∫£n h·ªìi t·ª´ ng∆∞·ªùi d√πng', // Ti√™u ƒë·ªÅ email
            html: `
                <h3>T√™n ng∆∞·ªùi g·ª≠i: ${data.name}</h3>
                <p>Email: ${data.email}</p>
                <p>S·ªë ƒëi·ªán tho·∫°i: ${data.phone}</p>
                <p>N·ªôi dung g·ª≠i: ${data.content}</p>
            `
        };

        // G·ª≠i email
        const info = await transporter.sendMail(mailOptions);

        return {
            errCode: 0,
            message: 'Email is sent successfully!',
            info: info
        };
    } catch (error) {
        return {
            errCode: 2,
            message: 'Failed to send email!',
            error: error
        };
    }
};

let sendEmailToUser = async(email) =>{
    try {
        const transporter = nodemailer.createTransport({
            host: "smtp.gmail.com",
            port: 587,
            secure: false, // Use `true` for port 465, `false` for all other ports
            auth: {
              user: process.env.EMAIL_APP,
              pass: process.env.EMAIL_APP_PASSWORD,
            },
          });
          
        const info = await transporter.sendMail({
            from: '" NGUYEN TAN LOC üëª" <nguyenloc02082004@gmail.com>', // sender address
            to: email, // list of receivers
            subject:  "Th√¥ng tin ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u",
            html: getBodyEmail(),
        });  
        return {
            errCode: 0,
            message: 'Please check your email to see the password!',
            info: info
        };
    } catch (error) {
        return({
            errCode: 2,
            message: 'Failed to find password!',
            error: error
        })
    }
}

let getBodyEmail = () =>{
    let result = '';
        result = `
            <h3>M·∫≠t kh·∫©u c·ªßa b·∫°n hi·ªán t·∫°i ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t v·ªÅ l√†: 1 </h3>
            <h3>ƒêƒÉng nh·∫≠p v√†o h·ªá th·ªëng v√† ƒë·ªïi m·∫≠t kh·∫©u b·∫°n mong mu·ªën</h3>
            <h3>Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y !</h3>
            <h3>Xin ch√¢n th√†nh c·∫£m ∆°n!</h3>
        `; // html body
    return result;
}

module.exports ={
    sendEmail:sendEmail,
    sendEmailToUser:sendEmailToUser,
}

